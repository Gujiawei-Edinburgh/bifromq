syntax = "proto3";
import "commontype/TopicMessage.proto";
import "distservice/TopicFanout.proto";

option java_multiple_files = true;
option java_package = "com.baidu.bifromq.dist.rpc.proto";
option java_outer_classname = "DistCoProcProtos";

package distservice;

message GroupMatchRecord {
  repeated string qReceiverId = 1; // qualified inboxId
}

message TenantOption{
  uint32 maxReceiversPerSharedSubGroup = 1;
}
message BatchMatchRequest {
  uint64 reqId = 1;
  repeated string scopedTopicFilter = 2;// tenantId_qInboxId_utf8_topicFilter(scopedTopicFilter)
  map<string, TenantOption> options = 3; // key: tenantId
}

message BatchMatchReply {
  enum Result{
    OK = 0;
    EXCEED_LIMIT = 1; // only for group join
    ERROR = 2;
  }
  uint64 reqId = 1;
  map<string, Result>  results = 2; // key: tenantId_qInboxId_utf8_topicFilter(scopedTopicFilter)
}

message BatchUnmatchRequest {
  uint64 reqId = 1;
  repeated string scopedTopicFilter = 2; // key: tenantId_qInboxId_utf8_topicFilter(scopedTopicFilter)
}

message BatchUnmatchReply {
  enum Result{
    OK = 0;
    NOT_EXISTED = 1;
    ERROR = 2;
  }
  uint64 reqId = 1;
  map<string, Result>  results = 2; // key: tenantId_qInboxId_utf8_topicFilter(scopedTopicFilter)
}
message DistPack{
  string tenantId = 1;
  repeated commontype.TopicMessagePack msgPack = 2; // topic messages packs shares same tenantId
}

// deprecate since 3.1.0, will be removed in 5.0.0
message BatchDistRequest {
  uint64 reqId = 1;
  repeated DistPack distPack = 2; // sorted by tenantId and topic
  string orderKey = 3;
}

// deprecate since 3.1.0, will be removed in 5.0.0
message BatchDistReply {
  uint64 reqId = 1;
  map<string, TopicFanout> result = 2;
}

message TenantDistRequest{
  uint64 reqId = 1;
  string tenantId = 2;
  repeated commontype.TopicMessagePack msgPack = 3;
  string orderKey = 4;
}

message TenantDistReply {
  enum Code{
    OK = 0;
    ERROR = 1;
  }

  message Result{
    Code code = 1;
    uint32 fanout = 2;
  }
  uint64 reqId = 1;
  map<string, Result> results = 2; // key: topic
}

message DistServiceRWCoProcInput{
  oneof type{
    BatchMatchRequest batchMatch = 1;
    BatchUnmatchRequest batchUnmatch = 2;
  }
}

message DistServiceRWCoProcOutput{
  oneof type{
    BatchMatchReply batchMatch = 1;
    BatchUnmatchReply batchUnmatch = 2;
  }
}

message DistServiceROCoProcInput{
  oneof Input{
    BatchDistRequest batchDist = 1;
    TenantDistRequest tenantDist = 2;
  }
}

message DistServiceROCoProcOutput{
  oneof Output{
    BatchDistReply batchDist = 1;
    TenantDistReply tenantDist = 2;
  }
}


